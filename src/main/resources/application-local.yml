spring:
  cloud:
    function:
      definition: consumer;producer
    stream:
      kafka:
        binder:
          configuration:
            ssl:
              truststore:
                location: D:/Softwares/Apache_Kafka/ssl/kafka.broker.truststore.jks
                password: changeit
                type: JKS
            security:
              protocol: SASL_SSL
            sasl:
              mechanism: SCRAM-SHA-512
              jaas:
                config: org.apache.kafka.common.security.scram.ScramLoginModule required username="broker-admin" password="test123";
          producer-properties:
            key.serializer: org.apache.kafka.common.serialization.ByteArraySerializer
            value.serializer: org.apache.kafka.common.serialization.StringSerializer
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          transaction:
            producer:
              error-channel-enabled: true
      bindings:
        producer-out-0:
          destination: sample-topic
          content-type: text/plain
          binder: kafka
          producer:
            use-native-encoding: true
        consumer-in-0:
          destination: sample-topic
          group: stream-api
          content-type: text/plain
          binder: kafka
          producer:
            use-native-decoding: true